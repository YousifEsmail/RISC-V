module INST_MEM #(
    parameter Address_Width ='d32,Data_Width='d32,Mem_Depth=2**Address_Width
) (
    input    wire   clk,
    input    wire   rst,
    input    wire   [Address_Width-1:0]  Address_IN,
    output   wire   [Data_Width-1:0]    Instr_F
    
);

integer i;
reg [Data_Width-1:0] INST_Memory [Mem_Depth-1:0];

// Write is Seq

/*     // ------ No Write In INST_MEM ---------
always @(posedge clk or negedge rst) 
begin
if (!rst) 
begin
    for ( i=0 ;i <=Mem_Depth-1 ;i=i+1 )
        begin
                INST_Memory[i]<='b0;
           end
end  else
begin
    INST_Memory[Address_IN]<=Data_IN;
end
end    

*/



// Read is Comb 
always @(*) 
begin
if (!rst) 
begin
    Instr_F<'b0;
end  
else
begin
    Instr_F<INST_Memory[Address_IN];
end
end    



    
endmodule